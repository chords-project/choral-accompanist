/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    id("com.google.cloud.tools.jib")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    // Choral can either be installed locally...
    mavenLocal()

    // ...or from the GitHub maven package repository
    val githubUsername = project.findProperty("gpr.user") as String? ?: System.getenv("USERNAME")
    val githubToken = project.findProperty("gpr.key") as String? ?: System.getenv("TOKEN")
    if (githubUsername != null && githubToken != null) {
        maven {
            url = uri("https://maven.pkg.github.com/choral-lang/choral")
            credentials {
                username = githubUsername
                password = githubToken
            }
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation(project(":reactive-middleware"))
    implementation(project(":travel-choreographies"))
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        //languageVersion = JavaLanguageVersion.of(24)
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jib {
    to.image = "europe-west1-docker.pkg.dev/chords-microservice-444208/webshop-repo/travel-sidecar-profile"
}

//jib {
//    from.image = "openjdk:24-jdk"
//    container.mainClass = "dev.chords.microservices.cartservice.Main"
//}

application {
    // Define the main class for the application.
    mainClass = "dev.chords.travel.profileservice.Main"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

