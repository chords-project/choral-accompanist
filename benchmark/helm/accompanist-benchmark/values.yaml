chain:
- name: first
  env:
  - name: BENCHMARK
    value: chain-initiator
  - name: SERVICE_NAME
    value: first
  serviceEnv:
  - name: NEXT_ADDRESS
    value: second
- name: second
  env:
  - name: BENCHMARK
    value: chain-forwarder
  - name: SERVICE_NAME
    value: second
  serviceEnv:
  - name: NEXT_ADDRESS
    value: third
- name: third
  env:
  - name: BENCHMARK
    value: chain-forwarder
  - name: SERVICE_NAME
    value: third
  serviceEnv:
  - name: NEXT_ADDRESS
    value: first

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "accompanist-benchmark"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to set up the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}
